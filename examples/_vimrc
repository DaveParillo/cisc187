" uncomment if pathogen package manager installed
" see: https://github.com/tpope/vim-pathogen
" execute pathogen#infect()
syntax on
filetype plugin indent on

set nocompatible

colorscheme slate

" change default colors from loud to more muted
hi Comment ctermfg=239
hi Include ctermfg=10

" Change default comment string for Commentary plugin
" uncomment if installed
" autocmd FileType c,cpp,cs,java setlocal commentstring=//\ %s


set nobackup
set noundofile
set tabstop=2
set shiftwidth=2
set expandtab                   " Convert tabs to spaces
set autowrite
set autoread
set autochdir                   " Change directory to the current buffer when opening files.

:let mapleader = " "

map <silent> <Leader>p  :bp<CR>
map <silent> <Leader>n  :bNext<CR>

" resize split windows by a % of current size
nnoremap <silent> <Leader>= :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
nnoremap <silent> <Leader>. :exe "vertical resize " . (winwidth(0) * 3/2)<CR>
nnoremap <silent> <Leader>, :exe "vertical resize " . (winwidth(0) * 2/3)<CR>
" move between splits
nnoremap <Leader>h <C-w>h
nnoremap <Leader>j <C-w>j
nnoremap <Leader>k <C-w>k
nnoremap <Leader>l <C-w>l
nnoremap <Leader>= <C-w>=


" explicitly reference ctags file
set tags=~/.tags

" netrw preferences
let g:netrw_liststyle = 3          " tree style

let g:netrw_browse_split = 4       " Open selected file in previous window
let g:netrw_preview = 1            " split vertically
let g:netrw_altv = 1               " file with :vsplit to the right of the browser.

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction


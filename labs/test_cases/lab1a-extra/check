#!/usr/bin/expect
set timeout 5
set filename [lindex $argv 0]
set prog [file rootname $filename].exe
log_user 0

source /var2/lopt/share/cisc187/check_common.tcl

send_user "checking file $prog . . . \n"

spawn $prog -h
expect {
  "*name*" {pass "prints basic help"}
  eof        {fail  "program did not print help text"}
  timeout    abort
}

spawn $prog
set expected "Hello, world!"
expect {
  "*Hello*Hello*" {abort "prints too many times" $expected $expect_out(buffer);}
  $expected {pass "prints default: $expected"}
  eof             {fail  "did not print default text" $expected $expect_out(buffer);}
  timeout          abort
}

foreach repeat [list 1 3 8] {
  spawn $prog -r $repeat
  set expected [string repeat "Hello, world!*" $repeat]
  expect {
    "$expected" {pass "prints 'Hello, world!' $repeat times"}
    eof         {abort  "did not repeat 'Hello, world!' $repeat times" $expected $expect_out(buffer);}
    timeout      abort
  }
}

foreach name [list Alice Blair Cassandra Doug Epsilon Yoda Zed] {
  spawn $prog -n $name
  set expected [join "Hello, $name!\n"]
  expect {
    "$expected" {pass "prints $expected"}
    eof         {abort  "did not print custom text" $expected $expect_out(buffer);}
    timeout      abort
  }
}

foreach {name repeat} [list Alexa 1 Bob 2 Clara 3 Dawn 4 Ed 5 Fran 6 Greg 7] {
  spawn $prog -n $name -r $repeat
  set expected [string repeat "Hello, $name!*" $repeat]
  set too_many [string repeat "Hello, $name!*" [expr $repeat + 1] ]
  expect {
    "$too_many" {abort "prints $name too many times" "$repeat times" $expect_out(buffer);}
    "$expected" {pass "prints $name $repeat times"}
    eof         {abort  "did not repeat $name $repeat times" $expected $expect_out(buffer);}
    timeout      abort
  }
}

